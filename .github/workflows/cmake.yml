name: CMake build and unit test

on: 
  push:
    #branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
        #platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.platform}}

    steps:        
    - name: Checkout submodules
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    
    - name: Install Doxygen - Ubuntu
      if: matrix.platform == 'ubuntu-latest'
      run: sudo apt-get install -y doxygen
      
    - name: Install Doxygen - MacOS
      if: matrix.platform == 'macos-latest'
      run: brew install doxygen
      
    - name: Build External - Windows
      if: matrix.platform == 'windows-latest'
      run: python BuildExternalLibs.py
      
    - name: Confiugre - Windows
      # Build your program with the given configuration
      if: matrix.platform == 'windows-latest'
      run: cmake . -B${{github.workspace}}/build_windows
      
    - name: Build - Windows
      if: matrix.platform == 'windows-latest'
      run: cmake --build ${{github.workspace}}/build_windows --config ${{env.BUILD_TYPE}}

    - name: Build External - Ubuntu/MacOS
      # Build your program with the given configuration
      if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
      run: python BuildExternalLibsLinux.py
      
    - name: Confiugre - Ubuntu/MacOS
      # Build your program with the given configuration
      if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
      run: cmake . -B${{github.workspace}}/build_linux

    - name: Build - Ubuntu/MacOS
      # Build your program with the given configuration
      if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
      run: cmake --build ${{github.workspace}}/build_linux --config ${{env.BUILD_TYPE}}


    #- name: Test on Windows
      # test execution on windows-latest
    #  id: windows
    #  if: matrix.platform == 'windows-latest'
    #  run: ./build/${{env.BUILD_TYPE}}/test.exe

    - name: Test on ubuntu
     # test execution on ubuntu-latest
      id: ubuntu
      if: matrix.platform == 'ubuntu-latest'
      run: ./build_linux/bin/test_example

    #- name: Test on macos
    # test execution on macos-latest
    #  id: macos
    #  if: matrix.platform == 'macos-latest'
    #  run: ./build/test
