name: CMake build and unit test

on: 
  push:
    #branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        # platform: [windows-latest]
        # platform: [ubuntu-latest, windows-latest]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.platform}}

    steps:        
    - name: Checkout submodules
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
        
        
    - name: Update - Ubuntu
      if: matrix.platform == 'ubuntu-latest'
      run: sudo apt update -y && sudo apt full-upgrade -y
    
    - name: Install Doxygen - Ubuntu
      if: matrix.platform == 'ubuntu-latest'
      run: sudo apt install -y doxygen xorg-dev
      
    - name: Install Doxygen - MacOS
      if: matrix.platform == 'macos-latest'
      run: brew install doxygen
      
    - name: Build External
      run: python3 BuildExternalLibs.py
      
    - name: Configure - Windows
      # Build your program with the given configuration
      if: matrix.platform == 'windows-latest'
      run: cmake . -B ${{github.workspace}}/build_windows
      
    - name: Build - Windows
      if: matrix.platform == 'windows-latest'
      run: cmake --build ${{github.workspace}}/build_windows --config ${{env.BUILD_TYPE}}

      
    - name: Configure - Ubuntu
      # Build your program with the given configuration
      if: matrix.platform == 'ubuntu-latest'
      run: cmake -S . -B ${{github.workspace}}/build_linux

    - name: Build - Ubuntu
      # Build your program with the given configuration
      if: matrix.platform == 'ubuntu-latest'
      run: cmake --build ${{github.workspace}}/build_linux


    - name: Configure - MacOS
      # Build your program with the given configuration
      if: matrix.platform == 'macos-latest'
      run: cmake -S . -B ${{github.workspace}}/build_darwin

    - name: Build - MacOS
      # Build your program with the given configuration
      if: matrix.platform == 'macos-latest'
      run: cmake --build ${{github.workspace}}/build_darwin

    - name: Test on Windows
      # test execution on windows-latest
      id: windows
      if: matrix.platform == 'windows-latest'
      run: ./build_windows/bin/${{env.BUILD_TYPE}}/test_example.exe

    - name: Test on Ubuntu
     # test execution on ubuntu-latest
      id: ubuntu
      if: matrix.platform == 'ubuntu-latest'
      run: ./build_linux/bin/test_example

    - name: Test on MacOS
     # test execution on mac-latest
      id: mac
      if: matrix.platform == 'macos-latest'
      run: ./build_darwin/bin/test_example
