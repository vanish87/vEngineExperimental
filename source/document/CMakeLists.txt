
find_package(Doxygen)

if(WIN32 AND (NOT ${DOXYGEN_FOUND}))
    set(DOXYGEN_FOUND true)
    set(DOXYGEN_EXECUTABLE ${CMAKE_CURRENT_SOURCE_DIR}/doxygen/bin/doxygen)
endif()
# add_subdirectory(doxygen)

# message(STATUS "CMAKE_CURRENT_SOURCE_DIR= ${CMAKE_CURRENT_SOURCE_DIR}")
# message(STATUS "CMAKE_PROJECT_SOURCE_DIR= ${CMAKE_PROJECT_SOURCE_DIR}")
# message(STATUS "META_PROJECT_NAME = ${META_PROJECT_NAME}")
# message(STATUS "CMAKE_CURRENT_BINARY_DIR= ${CMAKE_CURRENT_BINARY_DIR}")

if(DOXYGEN_FOUND)
    set(DOXYGEN_SRC_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/..)
    set(DOXYGEN_MAINPAGE_ROOT ${CMAKE_SOURCE_DIR})
    set(DOXYGEN_OUTPUT_DIR ${CMAKE_BINARY_DIR}/document)
    # list(APPEND DOXYGEN_SRC ${DOXYGEN_SRC_ROOT}/app/)
    # list(APPEND DOXYGEN_SRC ${DOXYGEN_SRC_ROOT}/editor/)
    # list(APPEND DOXYGEN_SRC ${DOXYGEN_SRC_ROOT}/engine/)
    # list(APPEND DOXYGEN_SRC ${DOXYGEN_SRC_ROOT}/plugins/)

	configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
    add_custom_target(doc ALL
        COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        COMMENT "Generating API documentation with Doxygen" VERBATIM
        )
endif(DOXYGEN_FOUND)